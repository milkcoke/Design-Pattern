package m.falcon.designpattern.createpattern.factory;

import m.falcon.designpattern.createpattern.domain.ship.Ship;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class ShipFactoryTest {

  @DisplayName("BlackPremiumShip should be generated by constructor DI of premium factory")
  @Test
  void createPremiumBlackShip() {
    // given
    Ship premiumBlackShip = new BlackShipFactory(new BlackShipPremiumPartsFactory()).create();

    // when
    premiumBlackShip.moveShip(); // Moved by BlackPremiumWheel
    premiumBlackShip.stopShip(); // Stopped by BlackPremiumAnchor
  }

  @DisplayName("WhiteNormalShip should be generated by constructor DI of premium factory")
  @Test
  void createNormalWhiteShip() {
    // given
    Ship normalWhiteShip = new WhiteShipFactory(new WhiteShipNormalPartsFactory()).create();

    // when
    normalWhiteShip.moveShip(); // Moved by WhiteWheel
    normalWhiteShip.stopShip(); // Stopped by WhiteAnchor
  }
}